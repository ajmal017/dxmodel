%tr
  -# Stock
  %td
    = link_to stock_path(trade.stock_id) do
      = trade.stock.country
      = trade.stock.ticker
  %td= trade.stock.name
  %td= trade.stock.currency


  -# Entry
  %td.fund.divider

  -# Enter signals
  - if local_assigns.has_key? :include_enter_signals
    %td= trade.enter_signal_date.strftime("%Y-%m-%d") 

  %td= trade.enter_date.strftime("%Y-%m-%d") if trade.enter_date
  %td= trade.longshort.capitalize if trade.longshort
  %td= number_with_delimiter(trade.quantity) if trade.quantity
  %td= number_to_currency(trade.enter_local_price, :precision => 4) if trade.enter_local_price
  %td= number_to_currency(trade.enter_local_value, :precision => 0) if trade.enter_local_value
  %td= number_to_currency(trade.enter_usd_value, :precision => 0) if trade.enter_usd_value


  -# Unrealized P&L
  - if local_assigns.has_key? :include_unrealized_pnl and local_assigns.has_key? :date
    %td.fund.divider
    %td{:class => trade.usd_pnl_on_date(date) < 0 ? 'negative' : 'positive' }  
      = "#{trade.usd_pnl_percentage_on_date(date).to_s}%"


  -# Exit
  - if local_assigns.has_key? :include_exit
    %td.fund.divider

    -# Exit signals
    - if local_assigns.has_key? :include_exit_signals
      %td= trade.exit_signal_date.strftime("%Y-%m-%d") 

    %td= trade.exit_date.strftime("%Y-%m-%d")
    %td= number_to_currency(trade.exit_local_price, :precision => 4)
    %td= number_to_currency(trade.exit_local_value, :precision => 0)
    %td= number_to_currency(trade.exit_usd_value, :precision => 0)


  -# Realized P&L
  - if local_assigns.has_key? :include_realized_pnl and local_assigns.has_key? :date
    %td.fund.divider
    %td{:class => trade.usd_pnl_on_date(date) < 0 ? 'negative' : 'positive' }  
      = "#{trade.usd_pnl_percentage_on_date(date).to_s}%"
      

  -# More
  %td.fund.divider
  %td= render partial: '/trades/actions', locals: {trade: trade}
